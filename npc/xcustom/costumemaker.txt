//===== rAthena Script =======================================
//= Euphy's Quest Shop
//===== By: ==================================================
//= Euphy
//===== Update Costumemaker By: ==================================================
//= Boy
//===== Current Version: =====================================
//= 1.4a
//===== Compatible With: =====================================
//= rAthena SVN r15340+
//===== Description: =========================================
//= A dynamic quest shop based on Lunar's, with easier config.
//= Includes support for multiple shops & cashpoints.
//= Item Preview script by ToastOfDoom.
//============================================================
					
moc_para01,41,167,5	script	Kyewolhyang	77,{
function Add; function Chk; function Slot; function A_An;
	mes "[^FF6600Kyewolhyang^000000]";
	mes "Hello, I am Kyewolhyang.";
	mes "I can exchange normal hat in the list to a costume..";
	mes "In the cost of that headgear, and Midgard Coins.";
	next;
	mes "[^FF6600Kyewolhyang^000000]";
	mes "You know cardy in the first floor eden sell enchant stone ?";
	mes "I got a rumor that this costume actually can";
	mes "be enchanted by those stones..";
	mes "Oh sorry, here's the costume list.";

	if(.Shops$ != "") set .@i,1;
	else {
		set .@menu$,"";
		for(set .@i,1; .@i<=getarraysize(.Shops$); set .@i,.@i+1)
			set .@menu$, .@menu$+.Shops$[.@i]+":";
		set .@i, select(.@menu$); }
		mes "^0055FFSelect one item at a time.^000000";
	callshop "chatmaker"+.@i,1;
	npcshopattach "chatmaker"+.@i;
	end;

function Add {
	if (getitemname(getarg(1))=="null") {
		debugmes "Quest reward #"+getarg(1)+" invalid (skipped)."; return; }
	for(set .@n,5; .@n<127; set .@n,.@n+2) {
		if (!getarg(.@n,0)) break;
		if (getitemname(getarg(.@n))=="null") {
			debugmes "Quest requirement #"+getarg(.@n)+" invalid (skipped) on Quest ItemID "+ getarg(1) +"."; return; } }
	for(set .@i,2; .@i<.@n; set .@i,.@i+1)
		set getd(".q_"+getarg(1)+"["+(.@i-2)+"]"), getarg(.@i);
	npcshopadditem "chatmaker"+getarg(0),getarg(1),((.ShowZeny)?getarg(3):0);
	return; }
function Chk {
	if (getarg(0)<getarg(1)) { set @qe0,1; return "^FF0000"; }
	else return "^00FF00"; }
function Slot {
	set .@s$,getitemname(getarg(0));
	switch(.ShowSlot){
		case 1: if (!getitemslots(getarg(0))) return .@s$;
		case 2: if (getiteminfo(getarg(0),11)>0) return .@s$+" ["+getitemslots(getarg(0))+"]";
		default: return .@s$; } }
function A_An {
	setarray .@A$[0],"a","e","i","o","u";
	set .@B$, "_"+getarg(0);
	for(set .@i,0; .@i<5; set .@i,.@i+1)
		if (compare(.@B$,"_"+.@A$[.@i])) return "an "+getarg(0);
	return "a "+getarg(0); }

OnBuyItem:
	set .@q[0],@bought_nameid;
	copyarray .@q[1],getd(".q_"+@bought_nameid+"[0]"),getarraysize(getd(".q_"+@bought_nameid+"[0]"));
	if (!.@q[1]) { message strcharinfo(0),"An error has occurred."; end; }
	mes "[^FF6600Kyewolhyang^000000]";
	mes "Your Choice: ^0055FF"+((.@q[1]>1)?.@q[1]+"x ":"")+Slot(.@q[0])+"^000000";
	mes "Requirements:";
	if (.@q[2]) mes " > "+Chk(Zeny,.@q[2])+.@q[2]+" Zeny^000000";
	if (.@q[3]) mes " > "+Chk(getd(.Points$[0]),.@q[3])+.@q[3]+" "+.Points$[1]+" ("+getd(.Points$[0])+"/"+.@q[3]+")^000000";
	if (.@q[4]) for(set .@i,4; .@i<getarraysize(.@q); set .@i,.@i+2)
		mes " > "+Chk(countitem(.@q[.@i]),.@q[.@i+1])+((.DisplayID)?"{"+.@q[.@i]+"} ":"")+Slot(.@q[.@i])+" ("+countitem(.@q[.@i])+"/"+.@q[.@i+1]+")^000000";
	next;
	set @qe1, getiteminfo(.@q[0],5); set @qe2, getiteminfo(.@q[0],11);
	while(1){
		switch(select(" ~ Purchase ^0055FF"+getitemname(.@q[0])+"^000000: ~ ^777777Cancel^000000")) {
			case 1:
				if (@qe0) { 
					mes "[^FF6600Kyewolhyang^000000]";
					mes "You're missing one or more quest requirements.";
					close; }
				if (!checkweight(.@q[0],.@q[1])) {
					mes "[^FF6600Kyewolhyang^000000]";
					mes "^FF0000You need "+(((.@q[1]*getiteminfo(.@q[0],6))+Weight-MaxWeight)/10)+" additional weight capacity to complete this trade.^000000";
					close; }
				if (.@q[2]) set Zeny, Zeny-.@q[2];
				if (.@q[3]) setd .Points$[0], getd(.Points$[0])-.@q[3];
				if (.@q[4]) for(set .@i,4; .@i<getarraysize(.@q); set .@i,.@i+2)
					delitem .@q[.@i],.@q[.@i+1];
			if (rand(1,1) == 1) {
				if (.Announce) announce strcharinfo(0)+" has created "+A_An(getitemname(.@q[0]))+"!",0;
				getitem .@q[0],.@q[1];
				specialeffect2 699;
					mes "[^FF6600Kyewolhyang^000000]";
					mes "Here's your costume !.";
					close;				
			} 
			else {
					specialeffect EF_SUI_EXPLOSION;
					mes "[^FF6600Kyewolhyang^000000]";
					mes "Woah, exploded like a firecracker.";
					mes "hahahahahaha.";
					close; 
			}			
			case 2:
				close; } }
OnInit:
// --------------------- Config ---------------------
// Custom points, if needed: "<vKyewolhyangble>","<name to display>"
	setarray .Points$[0],"#CASHPOINTS","Cash Points";

	set .Announce,0;	// Announce quest completion? (1: yes / 0: no)
	set .ShowSlot,0;	// Show item slots? (2: all equipment / 1: if slots > 0 / 0: never)
	set .DisplayID,1;	// Show item IDs? (1: yes / 0: no)
	set .ShowZeny,1;	// Show Zeny cost, if any? (1: yes / 0: no)

// Shop categories, if needed: "<Shop 1>","<Shop 2>"{,...};
// Duplicate dummy data for any additional shops (bottom of script).
// If no categories, use the second line instead (remove //).

	setarray .Shops$[1],"Quest HG 1";
	setarray .Shops$[2],"Quest HG 2";
	setarray .Shops$[3],"Quest HG 3";
	setarray .Shops$[4],"Quest HG 4";
	setarray .Shops$[5],"Special 1";
	setarray .Shops$[6],"Special 2";
	// set .Shops$,"n/a";

// Add(<shop number>,<reward ID>,<reward amount>,<Zeny cost>,<point cost>,
//     <required item ID>,<required item amount>{,...});
// Shop number corresponds with order above (default is 1).
// Note: Do NOT use a reward item more than once!
	
	Add(1,19791,1,1,0,5086,1,6242,500,6625,500); // Alarm Mask
	Add(1,19781,1,1,0,5074,1,6242,500,6625,500); // Angel Wing Ears
	Add(1,19939,1,1,0,2284,1,6242,500,6625,500); // Antler
	Add(1,20388,1,1,0,5174,1,6242,500,6625,500); // Ayam
	Add(1,31035,1,1,0,5021,1,6242,500,6625,500); // Bankruptcy for The heart
	Add(1,19845,1,1,0,5042,1,6242,500,6625,500); // Bao Bao
	Add(1,20119,1,1,0,5076,1,6242,500,6625,500); // Beanie
	Add(1,19734,1,1,0,2296,1,6242,500,6625,500); // Binoculars
	Add(1,20004,1,1,0,5091,1,6242,750,6625,500); // Big Golden Bell
	Add(1,20157,1,1,0,5065,1,6242,500,6625,500); // Blue Fish
	Add(1,20159,1,1,0,5052,1,6242,500,6625,500); // Blue Hairband
	sleep 10;
	Add(1,20056,1,1,0,5436,1,6242,500,6625,500); // Bride's Corolla
	Add(1,31128,1,1,0,5169,1,6242,1500,6625,500); // Bride Mask
	Add(1,20157,1,1,0,5065,1,6242,500,6625,500); // Blue Fish
	Add(1,20159,1,1,0,5052,1,6242,500,6625,500); // Blue Hairband
	Add(1,20275,1,1,0,5034,1,6242,500,6625,500); // Bulb Headband
	Add(1,19625,1,1,0,2214,1,6242,500,6625,500); // Bunny Band
	Add(1,19545,1,1,0,5016,1,6242,500,6625,500); // Boy's Cap
	
	Add(2,20118,1,1,0,5024,1,6242,500,6625,500); // Cake Hat
	Add(2,20445,1,1,0,5028,1,6242,500,6625,500); // Candle
	Add(2,31471,1,1,0,5437,1,6242,500,6625,500); // Celestial Flower
	Add(2,20245,1,1,0,5446,1,6242,500,6625,500); // Catfoot Hairpin
//	Add(2,19951,1,1,0,5449,1,6242,500,6625,500); // Cardboard Box
	Add(2,20013,1,1,0,5026,1,6242,500,6625,500); // Chef Hat
	Add(2,19582,1,1,0,5075,1,6242,500,6625,500); // Cowboy Hat
	Add(2,19622,1,1,0,5048,1,6242,500,6625,500); // Crescent Hairpin
	Add(2,19785,1,1,0,5107,1,6242,500,6625,500); // Crunch Toast
	Add(2,20261,1,1,0,5036,1,6242,500,6625,500); // Cross Hat
	sleep 10;
	Add(2,20454,1,1,0,5080,1,6242,500,6625,500); // Crown of Ancient Queen
	Add(2,19786,1,1,0,5081,1,6242,500,6625,500); // Crown of Mistress
	Add(2,20276,1,1,0,5082,1,6242,500,6625,500); // Decorative Mushroom
	Add(2,19547,1,1,0,5038,1,6242,500,6625,500); // Deviruchi
	Add(2,31113,1,1,0,2273,1,6242,500,6625,500); // Doctor Band
	Add(2,19782,1,1,0,5058,1,6242,500,6625,500); // Drooping Cat
	Add(2,19941,1,1,0,2283,1,6242,500,6625,500); // Ear Muffs
	Add(2,19854,1,1,0,5057,1,6242,500,6625,500); // Ears of Black Cat
	Add(2,19621,1,1,0,5068,1,6242,500,6625,500); // Evil Wing Ears
	Add(2,20185,1,1,0,5047,1,6242,500,6625,500); // Fashionable Glasses
	Add(2,19585,1,1,0,5170,1,6242,500,6625,500); // Feather Beret
	Add(2,20057,1,1,0,5018,1,6242,500,6625,500); // Feather Bonnet
	Add(2,19983,1,1,0,5061,1,6242,500,6625,500); // Flower Hairpin
	Add(2,19548,1,1,0,5447,1,6242,500,6625,500); // Frog Hat
	Add(2,20049,1,1,0,5063,1,6242,500,6625,500); // Giant Band Aid
	Add(2,19554,1,1,0,5176,1,6242,1500,6625,500); // Hahoe
	sleep 10;
	Add(3,19628,1,1,0,5001,1,6242,500,6625,500); // Headset	
	Add(3,19861,1,1,0,5091,1,6242,500,6625,500); // Heart Hairpin
	Add(3,20472,1,1,0,5025,1,6242,500,6625,500); // Helm of Angel
	Add(3,20385,1,1,0,5094,1,6242,750,6625,500); // Helmet of Orc Hero
	Add(3,20058,1,1,0,5070,1,6242,500,6625,500); // Hot Blooded
	Add(3,31714,1,1,0,5071,1,6242,500,6625,500); // Indian Headband
	Add(3,19618,1,1,0,5069,1,6242,500,6625,500); // Kitsune mask
	Add(3,19931,1,1,0,5084,1,6242,500,6625,500); // Lazy Smokie
	Add(3,21300,1,1,0,5177,1,6242,500,6625,500); // Lion Mask
	Add(3,19890,1,1,0,5027,1,6242,500,6625,500); // Mage Hat
	Add(3,19662,1,1,0,5045,1,6242,500,6625,500); // Magician Hat
	Add(3,20473,1,1,0,5031,1,6242,500,6625,500); // Mine Helmet
	sleep 10;
	Add(3,19932,1,1,0,5073,1,6242,500,6625,500); // Model Training Hat
	Add(3,19500,1,1,0,2278,1,6242,500,6625,500); // Mr Smile
	Add(3,20181,1,1,0,5117,1,6242,500,6625,500); // Mystic Rose
	Add(3,20208,1,1,0,5442,1,6242,500,6625,500); // Necktie
	Add(3,19872,1,1,0,2281,1,6242,750,6625,500); // Opera Mask
	Add(3,19846,1,1,0,5447,1,6242,500,6625,500); // Opera Phantom Mask
	Add(3,31712,1,1,0,5004,1,6242,500,6625,500); // Oxygen Mask
	Add(3,20054,1,1,0,5110,1,6242,500,6625,500); // Pacifier
	Add(3,20453,1,1,0,5023,1,6242,500,6625,500); // Parcel Hat
	Add(3,20050,1,1,0,5012,1,6242,500,6625,500); // Ph.D Hat
	sleep 10;
	Add(4,20304,1,1,0,5033,1,6242,500,6625,500); // Raccoon Hat
	Add(4,20182,1,1,0,5039,1,6242,500,6625,500); // Rainbow Eggshell
	Add(4,19701,1,1,0,5109,1,6242,500,6625,500); // Red Bonnet
	Add(4,20226,1,1,0,5444,1,6242,500,6625,500); // Red Comb
	Add(4,20224,1,1,0,5083,1,6242,500,6625,500); // Red Ribbon
	Add(4,19639,1,1,0,2280,1,6242,500,6625,500); // Sakkat
	Add(4,20138,1,1,0,5078,1,6242,500,6625,500); // Sea-Otter Hat
	Add(4,19626,1,1,0,5243,1,6242,500,6625,500); // Shafka
	Add(4,19858,1,1,0,5064,1,6242,500,6625,500); // Smokie Leaf
	Add(4,19840,1,1,0,5022,1,6242,750,6625,500); // Hat of Sun God
	Add(4,20330,1,1,0,5067,1,6242,500,6625,500); // Sombrero
	Add(4,19533,1,1,0,5029,1,6242,500,6625,500); // Spore Hat
	Add(4,20051,1,1,0,2272,1,6242,500,6625,500); // Stop Post
	Add(4,19829,1,1,0,5062,1,6242,500,6625,500); // Straw Hat
	Add(4,20207,1,1,0,5049,1,6242,500,6625,500); // Striped Hairband
	Add(4,20348,1,1,0,5032,1,6242,500,6625,500); // Sunday Hat
	sleep 10;
	Add(4,19851,1,1,0,5059,1,6242,500,6625,500); // Teddybear Hat
	Add(4,20471,1,1,0,5077,1,6242,500,6625,500); // Tulip Hairpin
	Add(4,31036,1,1,0,5173,1,6242,500,6625,500); // Magistrate Hat
	Add(4,19546,1,1,0,5171,1,6242,500,6625,500); // Valkyrie Helm
	Add(4,20059,1,1,0,2292,1,6242,750,6625,500); // Welding Mask
	Add(4,19984,1,1,0,5115,1,6242,500,6625,500); // Winter Hat
	Add(4,20387,1,1,0,5079,1,6242,500,6625,500); // X Hairpin
	Add(4,20244,1,1,0,5121,1,6242,750,6625,500); // Zealotus
	sleep 10;
	Add(5,19578,1,1,0,2225,1,6242,1500,6625,500); // Goggles
	Add(5,20158,1,1,0,2233,1,6242,500,6625,500); // Circlet
	Add(5,20074,1,1,0,2217,1,6242,500,6625,500); // Biretta
	Add(5,20271,1,1,0,5351,1,6242,500,6625,500); // Sunflower
	Add(5,19847,1,1,0,5348,1,6242,500,6625,500); // Big Sis
	Add(5,19850,1,1,0,5168,1,6242,2000,6625,500); // Bongun
	sleep 10;
	Add(5,19602,1,1,0,2231,1,6242,500,6625,500); // Gemmed Sallet
	Add(5,19828,1,1,0,5120,1,6242,500,6625,500); // Bucket Hat
	Add(5,2,1,1,0,5093,1,6242,750,6625,500); // Coif
	Add(5,19526,1,1,0,2229,1,6242,500,6625,500); // Helm
	Add(5,19901,1,1,0,5157,1,6242,500,6625,500); // Orc Helm
	Add(5,31131,1,1,0,5158,1,6242,500,6625,500); // Monk Hat
	Add(5,19799,1,1,0,5159,1,6242,500,6625,500); // Golden Gear
	Add(5,19849,1,1,0,5167,1,6242,1000,6625,500); // Munak Hat
	Add(5,3,1,1,0,5350,1,6242,500,6625,500); // Pirate Bandana
	sleep 10;	
	Add(5,19549,1,1,0,5160,1,6242,500,6625,500); // Majestic Goat
	Add(5,19527,1,1,0,5161,1,6242,500,6625,500); // Spiky Band
	Add(5,19796,1,1,0,5162,1,6242,500,6625,500); // Bone Helm
	Add(5,19619,1,1,0,5163,1,6242,500,6625,500); // Corsair
	Add(5,19630,1,1,0,5165,1,6242,500,6625,500); // Crown
	Add(5,19629,1,1,0,5164,1,6242,500,6625,500); // Tiara
	Add(5,19580,1,1,0,5166,1,6242,500,6625,500); // Sphinx
	sleep 10;
	Add(6,19551,1,1,0,2286,1,6242,500,6625,500); // Elven Ears
	Add(6,19583,1,1,0,2263,1,6242,500,6625,500); // Zorro Mask
	Add(6,19889,1,1,0,5085,1,6242,500,6625,500); // Small Ribbon
	Add(6,20124,1,1,0,2291,1,6242,500,6625,500); // Masquerade
	Add(6,19735,1,1,0,5014,1,6242,500,6625,500); // Fin Helm
	Add(6,21,1,1,0,5104,1,6242,500,6625,500); // Dark Blinder
	Add(6,19925,1,1,0,18874,1,6242,500,6625,500); // Monocle
	Add(6,20123,1,1,0,2276,1,6242,500,6625,500); // Eagle Eyes
	Add(6,19732,1,1,0,5090,1,6242,750,6625,500); // Goblin Leader
	Add(6,20390,1,1,0,2297,1,6242,750,6625,500); // Goblin
	Add(6,19553,1,1,0,5096,1,6242,500,6625,500); // Assassin
	Add(6,19505,1,1,0,2267,1,6242,500,6625,500); // Cigar
	Add(6,19636,1,1,0,2262,1,6242,500,6625,500); // Clown
	Add(6,20061,1,1,0,2265,1,6242,500,6625,500); // Gangster
	Add(6,19528,1,1,0,2266,1,6242,500,6625,500); // Cain
	Add(6,20091,1,1,0,2268,1,6242,500,6625,500); // Pipe
	

	
	
	
	
	
// --------------------------------------------------
	for(set .@i,1; .@i<=getarraysize(.Shops$); set .@i,.@i+1)
		npcshopdelitem "chatmaker"+.@i,909;
		npcshopdelitem "chatmaker2"+.@i,909;
		npcshopdelitem "chatmaker3"+.@i,909;
		npcshopdelitem "chatmaker4"+.@i,909;
		npcshopdelitem "chatmaker5"+.@i,909;
		npcshopdelitem "chatmaker6"+.@i,909;
	end;
}

// -------- Dummy data (duplicate as needed) --------
-	shop	chatmaker1	-1,909:-1
-	shop	chatmaker2	-1,909:-1
-	shop	chatmaker3	-1,909:-1
-	shop	chatmaker4	-1,909:-1
-	shop	chatmaker5	-1,909:-1
-	shop	chatmaker6	-1,909:-1