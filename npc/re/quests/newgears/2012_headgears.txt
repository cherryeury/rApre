//===== rAthena Script =======================================
//= 2012 Headgear Quests
//===== By: ==================================================
//= Euphy, -SkittleNugget-
//===== Current Version: =====================================
//= 1.0
//===== Compatible With: =====================================
//= rAthena Project
//===== Description: =========================================
//= [Official Conversion]
//= Enhance gears by synthesizing them with Energy Crystals.
//===== Additional Comments: =================================
//= 1.0 First version. [Euphy]
//=     Script is a little messy, could use some cleaning.
//============================================================

// Main NPC :: 2012_hat_quest
//============================================================
moc_para01,41,169,3	script	Reno	64,{
function Add; function Chk; function Slot; function A_An;

	// iRO has (very) minor differences in dialogue from the original script.
	// To use iRO's version, uncomment the line below.
	//set .@features_iRO,1;

	//custom translation -  all checks below
	if (checkweight(1301,1) == 0 || MaxWeight - Weight < 800) {
		mes "- Carrying too many items, cannot proceed. -";
		close;
	}

	setarray .@type$[0],"lower","intermediate","advanced","highest";
	setarray .@crystal$[0],"Rough","Purified","High";

	// playtime checks
	setarray .@quests_playtime[0],5161,5169,5174,5225,5226,5227;
	for (set .@i,0; .@i<6; set .@i,.@i+1) {
		if (checkquest(.@quests_playtime[.@i],PLAYTIME) == 2) {
			erasequest .@quests_playtime[.@i];
			mes "[^FF6600Reno^000000]";
			if (.@i < 3)	// hunting quest wait time
				mes "The waiting time for a "+.@type$[.@i]+" collection quest has expired. You can now take another request.";
			else        	// buff wait time
				mes "The waiting time for storing "+.@crystal$[.@i]+" Energy Crystals has expired. You can now store them again.";
			close;
		}
	}

	// hunting quest checks
	callsub L_CheckHunting,5161,5162,7,.@type$[0],6623,10; //Rough_Energy_Crystal
	callsub L_CheckHunting,5169,5170,4,.@type$[1],6624,10; //Purified_Energy_Crystal
	callsub L_CheckHunting,5174,5175,4,.@type$[2],6625,5;  //High_Purity_Energy_Xtal
	callsub L_CheckHunting,5174,5179,4,.@type$[3],6625,10; //High_Purity_Energy_Xtal

	// buff checks
	set .@energy_buf00, getstatus(SC_QUEST_BUFF1) + getstatus(SC_QUEST_BUFF2) + getstatus(SC_QUEST_BUFF3);
	if (!.@energy_buf00) {
		for (set .@i,0; .@i<3; set .@i,.@i+1) {
			if (isbegin_quest(.@i + 5222)) {
				set .@item, 6623 + .@i;
				set .@amount, 2 + rand(3);
				mes "[^FF6600Reno^000000]";
				mes getitemname(.@item)+" storage is now complete.";
				next;
				setquest 5225 + .@i;
				erasequest 5222 + .@i;
				getitem .@item,.@amount;
				mes "[^FF6600Reno^000000]";
				mes "^0000FF"+.@amount+" "+getitemname(.@item)+"s^000000 were extracted.";
				close;
			}
		}
	}

	mes "[^FF6600Reno^000000]";
	mes "Hi? I am ^FF6600Reno^000000 from the Energy Crystal Research Association, or ECRA.";
	next;
	switch(select("ECRA?:Quest to get Energy Crystals:Energy Crystal Buffs:Compress Energy Crystals:Exchange Crystals for Headgear:Random Gear for Crystals.")) {
	case 1:
		mes "[^FF6600Reno^000000]";
		mes "ECRA is the institute that researches '^0000FFEnergy Crystals^000000' that shall be used as an alternative energy source in the Rune-Midgarts Kingdom, which suffers from a shortage of energy.";
		next;
		select("The reason for doing this?");
		mes "[^FF6600Reno^000000]";
		mes "I would like to explain that we are not trying to make an excuse to get away from facing problem before I explain the reason. Never! So please let me finish.";
		next;
		mes "[^FF6600Reno^000000]";
		mes "The Research Team has sent me the results they found.";
		next;
		mes "[^FF6600Reno^000000]";
		mes "Energy Crystals turned out to be ^0000FFgenerated inside the bodies of some monsters^000000, and according to the research, stronger monsters generate higher-class energy crystals in their bodies.";
		next;
		mes "[^FF6600Reno^000000]";
		mes "The Research Team decided to collect Energy Crystals by giving requests to adventurers, with appropriate rewards. That enables us to collect better and be more ^FF0000efficient^000000.";
		next;
		mes "[^FF6600Reno^000000]";
		mes "Energy Crystals, accumulated through hunting monsters by my request, shall be used for my research. ^0000FFSome of them are planned to be returned to adventurers.^000000";
		next;
		mes "[^FF6600Reno^000000]";
		mes "Adventurers can use collected Energy Crystals for ^FF0000upgrading equipments^000000 through me.";
		next;
		mes "[^FF6600Reno^000000]";
		mes "If it works well, it seems to be good for both ECRA and adventurers.";
		close;
	case 2:
		mes "[^FF6600Reno^000000]";
		mes "The hunting quests are ranked by monster level and difficulty. The ranges are lower, intermediate, high quests and can only be taken once per day.";
		next;

		setarray .@quest_status[0],
			isbegin_quest(5162) + isbegin_quest(5163) + isbegin_quest(5164) + isbegin_quest(5165) + isbegin_quest(5166) + isbegin_quest(5167) + isbegin_quest(5168),
			isbegin_quest(5170) + isbegin_quest(5171) + isbegin_quest(5172) + isbegin_quest(5173),
			isbegin_quest(5175) + isbegin_quest(5176) + isbegin_quest(5177) + isbegin_quest(5178) + isbegin_quest(5179) + isbegin_quest(5180) + isbegin_quest(5181) + isbegin_quest(5182);
		setarray .@quest_index[0],5161,5169,5174;

		set .@select, select("Lower level hunting [61-80]:Intermediate level hunting [80-99]:High level hunting [90 and up]:Cancel my current quest.") - 1;
		if (.@select < 3) {
			setarray .@min_level[0],60,80,90,100;
			if (BaseLevel < .@min_level[.@select]) {
				mes "[^FF6600Reno^000000]";
				mes "I am sorry but the request for the "+.@type$[.@select]+" collection is only available for those level "+.@min_level[.@select]+" and higher. You do not seem to be capable of carrying out this request.";
				close;
			}
			if (.@quest_status[.@select]) {
				mes "[^FF6600Reno^000000]";
				mes "You seem to be under the other request of "+.@type$[.@select]+" collection. If the quest seems to be too hard... how about you ^FF0000give up on the request^000000?";
				close;
			}
			set .@playtime, checkquest(.@quest_index[.@select],PLAYTIME);
			if (.@playtime == 0 || .@playtime == 1) {
				mes "[^FF6600Reno^000000]";
				mes "Currently waiting for the "+.@type$[.@select]+" collection commission. Tasks in each collection can only be completed once per day."; //custom translation
				close;
			}
			mes "[^FF6600Reno^000000]";
			mes "You selected to hunt a monster from the "+.@type$[.@select]+" collection. After hunting these monsters you will receive "+((.@features_iRO)?"10 ":"")+"^0000FF"+.@crystal$[.@select]+" Energy Crystals^000000 when you return to me.";
			next;
			mes "[^FF6600Reno^000000]";
			mes "Please select the monster that you think you can easily hunt from the list.";
			next;
			switch (.@select) {
			case 0:
				set .@quest, select(
					"[Lower class] Requiem",
					"[Lower class] Bathory",
					"[Lower class] Spring Rabbit",
					"[Lower class] Sleeper",
					"[Lower class] Evil Druid",
					"[Lower class] Ground Petite",
					"[Lower class] Clock"
				);
				break;
			case 1:
				set .@quest, select(
					"[Intermediate class] Siroma",
					"[Intermediate class] Dark Priest",
					"[Intermediate class] Stapo",
					"[Intermediate class] Solider"
				);
				break;
			case 2:
				set .@quest, select(
					"[Advanced] Desert Wolf",
					"[Advanced] Medusa",
					"[Advanced] Pinguicula",
					"[Advanced] Majoruros",
					"[Highest] Raydric",
					"[Highest] Naga",
					"[Highest] Ancient Mummy",
					"[Highest] Ancient Mimic"
				);
				if (.@quest > 4 && BaseLevel < .@min_level[3]) {
					mes "[^FF6600Reno^000000]";
					mes "I am sorry but the request for the most advanced collection is only available for those level "+.@min_level[3]+" and higher. You do not seem to be capable of carrying out this request.";
					close;
				}
				break;
			}
			setquest .@quest_index[.@select] + .@quest;
			mes "[^FF6600Reno^000000]";
			mes "The request for "+.@type$[.@select]+" collection monsters has been issued. Please check the details on the issued document.";
			close;
		} else {
			setarray .@quest_count[0],7,4,8;
			for (set .@i,0; .@i<3; set .@i,.@i+1) {
				if (.@quest_status[.@i]) {
					mes "[^FF6600Reno^000000]";
					mes "You are currently under the request of the "+.@type$[.@i]+" collection. If you give up now, all your history will be lost. Do you really want to give up?";
					next;
					set .@erase_quest, select("Yes:No");
					switch (.@erase_quest) {
					case 1:
						for (set .@quest,.@quest_index[.@i]+1; .@quest<=.@quest_index[.@i]+.@quest_count[.@i]; set.@quest,.@quest+1) {
							if (isbegin_quest(.@quest))
								erasequest .@quest;
						}
						break;
					case 2:
						break;
					}
				}
			}
			switch (.@erase_quest) {
			case 0:
				mes "[^FF6600Reno^000000]";
				mes "You are not under any request.";
				close;
			case 1:
				mes "[^FF6600Reno^000000]";
				mes "The written request for you has been withdrawn.";
				close;
			case 2:
				mes "[^FF6600Reno^000000]";
				mes "Please keep up on it.";
				close;
			}
		}
	case 3:
		mes "[^FF6600Reno^000000]";
		mes "Do you want to accumulate Energy Crystals inside of your body to receive a buff?";
		next;
		set .@select, select("Accumulating Energy Crystals?:Accumulate Rough Energy Crystal:Accumulate Purified Energy Crystal:Accumulate High Energy Crystal");
		switch (.@select) {
		case 1:
			mes "[^FF6600Reno^000000]";
			mes "Energy Crystals are accumulated in your body when you hunt the monsters we ask you to.";
			next;
			mes "[^FF6600Reno^000000]";
			mes "Our research shows that some methods enable humans to accumulate the energy crystals inside of the body in the form of a buff.";
			next;
			mes "[^FF6600Reno^000000]";
			mes "If you spend about 3 hours, you will be able to gain a small amount of Energy Crystals. So do you want to receive the buff?";
			close;
		case 2:
			set .@playtime, checkquest(5225,PLAYTIME);
			set .@quest,5222;
			set .@min_level,60;
			set .@rate,1;
			set .@buff, SC_QUEST_BUFF1;
			break;
		case 3:
			set .@playtime, checkquest(5226,PLAYTIME);
			set .@quest,5223;
			set .@min_level,80;
			set .@rate,2;
			set .@buff, SC_QUEST_BUFF2;
			break;
		case 4:
			set .@playtime, checkquest(5227,PLAYTIME);
			set .@quest,5224;
			set .@min_level,90;
			set .@rate,3;
			set .@buff, SC_QUEST_BUFF3;
			break;
		}
		if (.@playtime == 0 || .@playtime == 1) {
			mes "[^FF6600Reno^000000]";
			mes "Were you successful? While storing other Energy Crystals will not have much effect on your body, storing the same one may cause you harm."; //custom translation
			close;
		}
		if (BaseLevel < .@min_level) {
			mes "[^FF6600Reno^000000]";
			mes "With a body like that, you can't accumulate "+.@crystal$[.@select-2]+" Energy Crystals. You must be level "+.@min_level+" or your body will be harmed in the process."; //custom translation
			close;
		}
		if (.@energy_buf00) {
			mes "[^FF6600Reno^000000]";
			mes "Accumulating Energy Crystal has already begun. I am sorry but it is impossible to accumulate two different types of Energy Crystals at a time.";
			close;
		}
		if (isbegin_quest(.@quest) > 0) {
			erasequest .@quest;
			mes "[^FF6600Reno^000000]";
			mes "An error has occurred. Please forgive me for the inconvenience."; //custom translation
			close;
		}
		mes "[^FF6600Reno^000000]";
		mes "It takes 3 hours for your body to accumulate 2 to 4 "+.@crystal$[.@select-2]+" Energy Crystals. Do you want to start?";
		next;
		if(select("Cancel:Start") == 1) {
			mes "[^FF6600Reno^000000]";
			mes "I recommend that you try to ccumulate Energy Crystal when you have time.";
			close;
		}
		mes "[^FF6600Reno^000000]";
		mes "You might feel a slight tingle.";
		next;
		specialeffect2 EF_BASH3D;
		percentheal .@rate * -5,0;
		//consumeitem ??; //Keep_Connection_[.@rate]
		sc_start .@buff,10800000,.@rate;	// Atk/Matk + 5*rate (+5, +10, +15)
		setquest .@quest;
		mes "[^FF6600Reno^000000]";
		mes "- Puck -";
		next;
		mes "[^FF6600Reno^000000]";
		mes "Everything seems to be in order. Let's start accumulating "+.@crystal$[.@select-2]+" Energy Crystals. Remember to come back to me after 3 hours to get the "+.@crystal$[.@select-2]+" Energy Crystals.";
		close;
	case 4:
		mes "[^FF6600Reno^000000]";
		mes "Do you want to compress the Energy Crystals?";
		next;
		switch(select("What does compressing do?:Compress Rough to Purified Crystal:Compress Purified to High Crystal")) {
		case 1:
			mes "[^FF6600Reno^000000]";
			mes "Are you curious about Energy Crystal compression? I can compress lower level Energy Crystals into higher ones.";
			next;
			mes "[^FF6600Reno^000000]";
			mes "Here is what I can make.";
			mes "^FF000010 Rough Energy Crystals^000000 = ^FF00001 Purified Energy Crystal^000000";
			mes "^FF00005 Purified Energy Crystals^000000 = ^FF00001 High Energy Crystal^000000";
			next;
			mes "[^FF6600Reno^000000]";
			mes "If you need higher grade Energy Crystals, this is a good way to get them since the lower ones are easier to get.";
			close;
		case 2:
			set .@crystal,6623;  //Rough_Energy_Crystal
			set .@crystal_,6624; //Purified_Energy_Crystal
			set .@rate,10;
			break;
		case 3:
			set .@crystal,6624;  //Purified_Energy_Crystal
			set .@crystal_,6625; //High_Purity_Energy_Xtal
			set .@rate,5;
			break;
		}
		set .@crystal_count, countitem(.@crystal);
		set .@crystal_get, .@crystal_count / .@rate;
		mes "[^FF6600Reno^000000]";
		mes sprintf("^FF0000%d %s^000000 = ^FF00001 %s^000000",.@rate,getitemname(.@crystal),getitemname(.@crystal_));
		next;
		mes "[^FF6600Reno^000000]";
		mes sprintf("%d %ss will be compressed to %d %ss.",.@crystal_count,getitemname(.@crystal),.@crystal_get,getitemname(.@crystal_));
		mes "Do you want to compress?";
		next;
		if(select("Compress:Stop") == 2) {
			mes "[^FF6600Reno^000000]";
			mes "Okay, please contact if you need me in the future.";
			close;
		}
		while(1) {
			if (.@crystal_count >= .@rate) {  //custom translation
				delitem .@crystal,.@rate;
				getitem .@crystal_,1;
				set .@crystal_count, countitem(.@crystal);
				set .@crystal_get, .@crystal_count / .@rate;
				mes "[^FF6600Reno^000000]";
				mes "The compression was very successful.";
				mes "There are "+.@crystal_count+" Energy Crystals left, which can compress into "+.@crystal_get+" Energy Crystals. Do you want to continue?";
				next;
				if(select("Compress:Stop") == 2)
					break;
			} else {
				mes "[^FF6600Reno^000000]";
				mes "You don't have enough "+getitemname(.@crystal)+"s.";
				next;
				break;
			}
		}
		mes "[^FF6600Reno^000000]";
		mes "Compression completed.";
		close;
	case 5:
		disable_items;
		mes "[^FF6600Reno^000000]";
		mes "Do you want to exchange Energy Crystals for equipment? Please select the type of Energy Crystal that you wish to exchange.";
			goto L_Shop;
	case 6:
		mes "[^FF6600Reno^000000]";
		mes "Do you want to donate Energy Crystals to get a random new headgear?";
		next;
		switch(select("Donate Energy Crystals?:Donate 300 Rough Energy Crystals.:Donate 600 Purified Energy Crystals.:Donate 900 High Energy Crystals.")) {
		case 1:
			mes "[^FF6600Reno^000000]";
			mes "We are collecting Energy Crystals so that we can research more combinations of headgears for adventurers.";
			next;
			mes "[^FF6600Reno^000000]";
			mes "Thanks to the support of adventurers we can use these Energy Crystals to further our research.";
			next;
			mes "[^FF6600Reno^000000]";
			mes "So we receive a minimum of 300 Rough Energy Crystals, 600 Purified Energy Crystals, and 900 High Energy Crystals.";
			if (!.@features_iRO) {
				next;
				mes "[^FF6600Reno^000000]";
				mes "You may feel that this is a burden, but for the sake of our research, please continue."; //custom translation
				close;
			}
			mes "For the donation, I'll give you a random new headgear.";
			next;
			mes "[^FF6600Reno^000000]";
			mes "300 Rough Energy Crystals";
			mes "- New Mage Hat";
			mes "- New Magician Hat";
			mes "- New Kitsune Mask";
			mes "- New Joker Jester";
			mes "- New Bunny Band";
			mes "- New Munak Hat";
			mes "- New Bongun Hat";
			mes "- New Phantom Opera Mask";
			next;
			mes "[^FF6600Reno^000000]";
			mes "600 Purified Energy Crystals";
			mes "- Good Binoculars";
			mes "- Good Fin Helm";
			mes "- Good Assassin Mask";
			mes "- Good Welding Mask";
			mes "- Good Safety Ring";
			mes "- Good Angelic Protection";
			mes "- Good Angelic Guard";
			mes "- Good Angelic Cardigan";
			mes "- Good Angel's Reincarnation";
			next;
			mes "[^FF6600Reno^000000]";
			mes "900 High Energy Crystals";
			mes "- Enhanced Corsair";
			mes "- Enhanced Bone Helm";
			mes "- Enhanced Helm of Angel";
			mes "- Enhanced Refined Deviruchi Hat";
			mes "- Enhanced Variant Shoes";
			mes "- Enhanced Ring of Flame Lord";
			mes "- Enhanced Ring of Resonance";
			close;
		case 2:
			if (countitem(6623) < 300) {
				mes "[^FF6600Reno^000000]";
				mes "Thank for your support, but we need 300 Rough Energy Crystals.";
				close;
			}
			delitem 6623,300; //Rough_Energy_Crystal
			set .@r, rand(1,17);
			     if (.@r <= 2)  getitem 18760,1; //Remodel_Wizardry_Hat
			else if (.@r <= 4)  getitem 18761,1; //Remodel_Magician_Hat
			else if (.@r <= 6)  getitem 18762,1; //Remodel_Mask_Of_Fox
			else if (.@r <= 8)  getitem 18763,1; //Remodel_Joker_Jester
			else if (.@r <= 10) getitem 18764,1; //Remodel_Bunny_Band
			else if (.@r <= 13) getitem 18769,1; //Remodel_Munak_Turban
			else if (.@r <= 16) getitem 18770,1; //Remodel_Bongun_Hat
			else                getitem 18771,1; //Remodel_Opera_Mask
			break;
		case 3:
			if (countitem(6624) < 600) {
				mes "[^FF6600Reno^000000]";
				mes "Thank for your support, but we need 600 Purified Energy Crystals.";
				close;
			}
			delitem 6624,600; //Purified_Energy_Crystal
			set .@r, rand(1,18);
			     if (.@r <= 3)  getitem 18772,1; //Improved_Binoculars
			else if (.@r <= 6)  getitem 18773,1; //Improved_Fin_Helm
			else if (.@r <= 9)  getitem 18774,1; //Improved_Assassin_Mask
			else if (.@r <= 12) getitem 18775,1; //Improved_Welding_Mask
			else if (.@r <= 13) getitem 2956,1;  //Safety_Ring_
			else if (.@r <= 14) getitem 15068,1; //Im_Angel's_Protection
			else if (.@r <= 15) getitem 2183,1;  //Impr_Angel's_Safeguard
			else if (.@r <= 16) getitem 22015,1; //Impr_Angel's_Arrival
			else if (.@r <= 17) getitem 20710,1; //Impr_Angel's_Warmth
			else                getitem 18776,1; //Improved_Kiss_Of_Angel
			break;
		case 4:
			if (countitem(6625) < 900) {
				mes "[^FF6600Reno^000000]";
				mes "Thank for your support, but we need 900 High Energy Crystals.";
				close;
			}
			delitem 6625,900; //High_Purity_Energy_Xtal
			set .@r, rand(1,33);
			     if (.@r <= 10) getitem 18765,1; //Enhanced_Corsair
			else if (.@r <= 20) getitem 18768,1; //Enhanced_Bone_Helm
			else if (.@r <= 25) getitem 18766,1; //Enhanced_Helm_Of_Angel
			else if (.@r <= 30) getitem 5281,1;  //Deviruchi_Cap_C
			else if (.@r <= 35) getitem 22014,1; //Enhanced_Variant_Shoes
			else if (.@r <= 36) getitem 2957,1;  //Good_Ring_Of_Flame_Lord
			else                getitem 2958,1;  //Good_Ring_Of_Resonance
			break;
		}
		mes "[^FF6600Reno^000000]";
		mes "Thank you very much. The Energy Crystals you donated will be greatly helpful for our research. This is your reward for your donation."; //custom translation
		close;
	}

//callsub L_CheckHunting,<quest index>,<start quest>,<number of quests>,"<type>",<reward id>,<reward amount>;
L_CheckHunting:
	for (set .@quest,getarg(0)+1; .@quest<getarg(1)+getarg(2); set .@quest,.@quest+1) {
		if (checkquest(.@quest,HUNTING) == 2) {
			mes "[^FF6600Reno^000000]";
			mes "Finished "+getarg(3)+" collection hunting quest.";
			next;
			setquest getarg(0);
			erasequest .@quest;
			getitem getarg(4),getarg(5);
			mes "You receive "+getarg(5)+" "+getitemname(getarg(4))+"s as the "+getarg(3)+" collection reward.";
			close;
		}
	}
	return;
	
	L_Shop:
	if(.Shops$ != "") set .@i,1;
	else {
		set .@menu$,"";
		for(set .@i,1; .@i<=getarraysize(.Shops$); set .@i,.@i+1)
			set .@menu$, .@menu$+.Shops$[.@i]+":";
		set .@i, select(.@menu$); }
		mes "^0055FFYou can only select one item at a time.^000000";
	callshop "crystalx"+.@i,1;
	npcshopattach "crystalx"+.@i;
	end;

function Add {
	if (getitemname(getarg(1))=="null") {
		debugmes "Quest reward #"+getarg(1)+" invalid (skipped)."; return; }
	for(set .@n,5; .@n<127; set .@n,.@n+2) {
		if (!getarg(.@n,0)) break;
		if (getitemname(getarg(.@n))=="null") {
			debugmes "Quest requirement #"+getarg(.@n)+" invalid (skipped) on Quest ItemID "+ getarg(1) +"."; return; } }
	for(set .@i,2; .@i<.@n; set .@i,.@i+1)
		set getd(".q_"+getarg(1)+"["+(.@i-2)+"]"), getarg(.@i);
	npcshopadditem "crystalx"+getarg(0),getarg(1),((.ShowZeny)?getarg(3):0);
	return; }
function Chk {
	if (getarg(0)<getarg(1)) { set @qe0,1; return "^FF0000"; }
	else return "^00FF00"; }
function Slot {
	set .@s$,getitemname(getarg(0));
	switch(.ShowSlot){
		case 1: if (!getitemslots(getarg(0))) return .@s$;
		case 2: if (getiteminfo(getarg(0),11)>0) return .@s$+" ["+getitemslots(getarg(0))+"]";
		default: return .@s$; } }
function A_An {
	setarray .@A$[0],"a","e","i","o","u";
	set .@B$, "_"+getarg(0);
	for(set .@i,0; .@i<5; set .@i,.@i+1)
		if (compare(.@B$,"_"+.@A$[.@i])) return "an "+getarg(0);
	return "a "+getarg(0); }

OnBuyItem:
	set .@q[0],@bought_nameid;
	copyarray .@q[1],getd(".q_"+@bought_nameid+"[0]"),getarraysize(getd(".q_"+@bought_nameid+"[0]"));
	if (!.@q[1]) { message strcharinfo(0),"An error has occurred."; end; }
	mes "[^FF6600Reno^000000]";
	mes "Your Choice: ^0055FF"+((.@q[1]>1)?.@q[1]+"x ":"")+Slot(.@q[0])+"^000000";
	mes "Requirements:";
	if (.@q[2]) mes " > "+Chk(Zeny,.@q[2])+.@q[2]+" Zeny^000000";
	if (.@q[3]) mes " > "+Chk(getd(.Points$[0]),.@q[3])+.@q[3]+" "+.Points$[1]+" ("+getd(.Points$[0])+"/"+.@q[3]+")^000000";
	if (.@q[4]) for(set .@i,4; .@i<getarraysize(.@q); set .@i,.@i+2)
		mes " > "+Chk(countitem(.@q[.@i]),.@q[.@i+1])+((.DisplayID)?"{"+.@q[.@i]+"} ":"")+Slot(.@q[.@i])+" ("+countitem(.@q[.@i])+"/"+.@q[.@i+1]+")^000000";
	next;
	set @qe1, getiteminfo(.@q[0],5); set @qe2, getiteminfo(.@q[0],11);
	while(1){
		switch(select(" ~ Purchase ^0055FF"+getitemname(.@q[0])+"^000000: ~ ^777777Cancel^000000")) {
			case 1:		
				if (@qe0) { 
					mes "[^FF6600Reno^000000]";
					mes "You're missing one or more quest requirements.";
					close; }
				if (!checkweight(.@q[0],.@q[1])) {
					mes "[^FF6600Reno^000000]";
					mes "^FF0000You need "+(((.@q[1]*getiteminfo(.@q[0],6))+Weight-MaxWeight)/10)+" additional weight capacity to complete this trade.^000000";
					close; }
				if (.@q[2]) set Zeny, Zeny-.@q[2];
				if (.@q[3]) setd .Points$[0], getd(.Points$[0])-.@q[3];
				if (.@q[4]) for(set .@i,4; .@i<getarraysize(.@q); set .@i,.@i+2)
					delitem .@q[.@i],.@q[.@i+1];
			if (rand(1,1) == 1) {
				if (.Announce) announce strcharinfo(0)+" has created "+A_An(getitemname(.@q[0]))+"!",0;
				getitem .@q[0],.@q[1];
				specialeffect2 699;
					mes "[^FF6600Reno^000000]";
					mes "Here's your item.";
					mes "Congratulation !.";
					close;				
			} 
			else {
					specialeffect EF_SUI_EXPLOSION;
					mes "[^FF6600Reno^000000]";
					mes "Woah, exploded like a firecracker.";
					mes "hahahahahaha.";
					close; 
			}			
			case 2:
				close; } }

OnInit:
// --------------------- Config ---------------------
// Custom points, if needed: "<variable>","<name to display>"
	setarray .Points$[0],"#CASHPOINTS","Cash Points";

	set .Announce,0;	// Announce quest completion? (1: yes / 0: no)
	set .ShowSlot,1;	// Show item slots? (2: all equipment / 1: if slots > 0 / 0: never)
	set .DisplayID,0;	// Show item IDs? (1: yes / 0: no)
	set .ShowZeny,1;	// Show Zeny cost, if any? (1: yes / 0: no)

// Shop categories, if needed: "<Shop 1>","<Shop 2>"{,...};
// Duplicate dummy data for any additional shops (bottom of script).
// If no categories, use the second line instead (remove //).

	setarray .Shops$[1],"Rough Energy Crystal.";
	setarray .Shops$[2],"Purified Energy Crystal";
	setarray .Shops$[3],"High Purity Energy Crystal";
	// set .Shops$,"n/a";

// Add(<shop number>,<reward ID>,<reward amount>,<Zeny cost>,<point cost>,
//     <required item ID>,<required item amount>{,...});
// Shop number corresponds with order above (default is 1).
// Note: Do NOT use a reward item more than once!
	
	Add(1,18760,1,1,0,5027,1,6242,100,6623,100); // mage hat
	Add(1,18761,1,1,0,5045,1,6242,100,6623,100); // magician hat
	Add(1,18762,1,1,0,5069,1,6242,100,6623,100); // kitsune
	Add(1,18763,1,1,0,5003,1,6242,100,6623,100); // Joker
	Add(1,18764,1,1,0,2214,1,6242,100,6623,100); // Bunny
	Add(1,18769,1,1,0,5167,1,6242,100,6623,100); // Munak
	Add(1,18770,1,1,0,5168,1,6242,100,6623,100); // Bongun
	Add(1,18771,1,1,0,5043,1,6242,100,6623,100); // Opera
		
	Add(2,18772,1,1,0,2296,1,6242,150,6624,200); // Bino
	Add(2,18773,1,1,0,5014,1,6242,150,6624,200); // Fin
	Add(2,18774,1,1,0,5096,1,6242,150,6624,200); // Assassin
	Add(2,18775,1,1,0,2292,1,6242,150,6624,200); // Welding
	Add(2,2956,1,1,0,6242,150,2615,1,2621,1,2624,1,2622,1,2625,1,2623,1,2626,1,6624,200);	// Safety
	
	Add(3,15068,1,1,0,2355,1,6242,200,6625,20); // Angelic P
	Add(3,2183,1,1,0,2116,1,6242,200,6625,20); // Angelic G
	Add(3,22015,1,1,0,2420,1,6242,200,6625,20); // Angelic R
	Add(3,20710,1,1,0,2521,1,6242,200,6625,20); // Angelic Cardigan
	Add(3,18776,1,1,0,5125,1,6242,200,6625,20);	 // Angel's kiss
	
	Add(3,18766,1,1,0,5025,1,6242,250,6625,300);
	Add(3,5281,1,1,0,5038,1,6242,250,6625,300);
	Add(3,22014,1,1,0,2423,1,6242,250,6625,300);
	Add(3,2957,1,1,0,2678,1,6242,250,6625,300);
	Add(3,2958,1,1,0,2679,1,6242,250,6625,300);

	

// --------------------------------------------------
	for(set .@i,1; .@i<=getarraysize(.Shops$); set .@i,.@i+1)
		npcshopdelitem "crystalx"+.@i,909;
	end;
}

// -------- Dummy data (duplicate as needed) --------
-	shop	crystalx1	-1,909:-1
-	shop	crystalx2	-1,909:-1
-	shop	crystalx3	-1,909:-1
-	shop	crystalx4	-1,909:-1